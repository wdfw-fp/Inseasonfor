name: Daily Update and Deployment

on:
  workflow_dispatch:
  # Uncomment to schedule daily runs
  # schedule:
  #   - cron: '0 12 * * *'  # Daily at 5 AM Pacific / 12 PM UTC
  # push:
  #   branches:
  #     - main

permissions:
  contents: write


jobs:
  render_and_deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # # 2. Debug forecast_results.csv
      # - name: Debug forecast_results.csv
      #   run: |
      #     echo "Current working directory:"
      #     pwd
      #     echo "Listing files in inst/data-cache:"
      #     ls -l inst/data-cache/ || echo "Directory does not exist"
      #     echo "Contents of forecast_results.csv:"
      #     cat inst/data-cache/forecast_results.csv || echo "File does not exist"

      # 3. Install system dependencies
      - name: Install system dependencies
        run: |
          sudo apt-get -y update
          sudo apt-get -y install libx11-dev libcurl4-openssl-dev libssl-dev make \
            pandoc libfreetype6-dev libjpeg-dev libpng-dev libtiff-dev libicu-dev \
            libfontconfig1-dev libfribidi-dev libharfbuzz-dev libxml2-dev \
            libcairo2-dev zlib1g-dev libnode-dev

      # 4. Set up R
      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.4.0'


      # 6. Debug renv paths after restore (debug step after restore)
      - name: Check renv cache path
        run: ls -l ~/.cache/R/renv || echo "No cache directory yet"

      # 7. Cache R packages managed by renv (move this step after renv::restore())
      - name: Cache R packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/R/renv
          key: ${{ runner.os }}-renv-${{ hashFiles('renv.lock') }}
          restore-keys: |
            ${{ runner.os }}-renv-

      - name: Debug renv cache contents
        run: du -sh ~/.cache/R/renv || echo "No cache directory"


      # 5. Install renv and restore environment
      - name: Install and restore renv
        run: |
          install.packages("renv")
          renv::restore()
        shell: Rscript {0}


      # 8. Install the Inseasonfor package from local source
      - name: Install Inseasonfor from local source
        run: install.packages(".", repos = NULL, type = "source")
        shell: Rscript {0}

      # 9. Render the report using package function
      - name: Render the report
        run: Rscript -e 'Inseasonfor::render_page_fun()'

      # Debug: List files in inst/data-cache
      - name: List files in inst/data-cache
      run: ls -l inst/data-cache || echo "inst/data-cache directory does not exist"


      # Debug: Check git status
      - name: Check git status before commit
        run: git status

      # Check timestamps of .csv files before committing
      - name: Check CSV file timestamps
        run: |
          ls -lh inst/data-cache/*.csv

      # Ensure correct permissions for the CSV files
      - name: Set correct permissions for CSV files
        run: chmod -R 777 inst/data-cache/*.csv


      # 10. Commit updated CSVs (if changed)
      - name: Commit updated CSV files (verbose)
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          git config user.email "mark.sorel@dfw.wa.gov"
          git config user.name "marksorel8"
          git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/marksorel8/Inseasonfor.git
          git add inst/data-cache/*.csv || true
          git status
          git diff --cached --quiet || git commit -m "Update CSV files"
          git push origin main

      # # 11. Debug inst directory (optional)
      # - name: Debug inst directory
      #   run: |
      #     echo "Listing files in inst directory:"
      #     ls -l inst/

      # # 12. Debug site directory before deployment
      # - name: Debug site directory
      #   run: |
      #     ls -lh site || echo "site/ does not exist"
      #     ls -lh site/index.html || echo "index.html not found"

      # 13. Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: site
