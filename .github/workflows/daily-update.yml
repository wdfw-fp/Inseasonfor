
name: Daily Update and Deployment

on:
  workflow_dispatch: {}
  # daily runs
  schedule:
    - cron: '0 14 * * *'  # 7am Pacific
    - cron: '0 15 * * *'  # 8am Pacific
permissions:
  contents: write


jobs:
  render_and_deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0



      # 2. Install system dependencies
      - name: Install system dependencies
        run: |
          sudo apt-get -y update
          sudo apt-get -y install libx11-dev libcurl4-openssl-dev libssl-dev make \
            pandoc libfreetype6-dev libjpeg-dev libpng-dev libtiff-dev libicu-dev \
            libfontconfig1-dev libfribidi-dev libharfbuzz-dev libxml2-dev \
            libcairo2-dev zlib1g-dev libnode-dev

      # 3. Set up R
      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.4.0'


      # 4. Cache R packages managed by renv
      - name: Cache R packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/R/renv
          key: ${{ runner.os }}-renv-${{ hashFiles('renv.lock') }}
          restore-keys: |
            ${{ runner.os }}-renv-


      # 5. Install renv and restore environment
      - name: Install and restore renv
        run: |
          install.packages("renv")
          renv::restore()
        shell: Rscript {0}




      # 6. render the rmarkdown
      - name: Render the report using custom script
        run: Rscript inst/scripts/run_render.R

      # 7. if new model results were added to .csv, move to location for git tracking
      - name: Move CSV into inst/data-cache for Git tracking
        run: |
          mkdir -p inst/data-cache
          if [ -f data-cache/forecast_results.csv ]; then
            mv data-cache/forecast_results.csv inst/data-cache/
          else
            echo "Warning: data-cache/forecast_results.csv does not exist."
          fi


      # 8. Ensure correct permissions for the CSV files (allow writing)
      - name: Set correct permissions for CSV files
        run: chmod -R 644 inst/data-cache/*.csv


      # 9. Commit updated CSVs (if changed)
      - name: Commit updated CSV files (verbose)
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          git config user.email "mark.sorel@dfw.wa.gov"
          git config user.name "marksorel8"
          git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/wdfw-fp/Inseasonfor.git
          git add inst/data-cache/*.csv || true
          git status
          git diff --cached --quiet || git commit -m "Update CSV files"
          git push origin main



      # 10. Deploy the html from the rendered Rmarkdown to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: site
