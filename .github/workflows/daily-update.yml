name: Daily Update and Deployment

on:
  workflow_dispatch:
  # You can uncomment this to schedule daily runs
  # schedule:
  #   - cron: '0 12 * * *'  # Daily at 5 AM Pacific / 12 PM UTC
  # push:
  #   branches:
  #     - main

permissions:
  contents: write

jobs:
  render_and_deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Set up system dependencies
      - name: Install system dependencies
        run: |
          sudo apt-get -y update
          sudo apt-get -y install libx11-dev libcurl4-openssl-dev libssl-dev make \
            pandoc libfreetype6-dev libjpeg-dev libpng-dev libtiff-dev libicu-dev \
            libfontconfig1-dev libfribidi-dev libharfbuzz-dev libxml2-dev \
            libcairo2-dev zlib1g-dev libnode-dev

      # 3. Set up R
      - name: Set up R
        uses: r-lib/actions/setup-r@v2

      # 4. Cache R packages installed by renv
      - name: Cache R packages
        uses: actions/cache@v3
        with:
          path: renv/library
          key: ${{ runner.os }}-renv-${{ hashFiles('renv.lock') }}
          restore-keys: |
            ${{ runner.os }}-renv-

      # 5. Install renv and restore environment
      - name: Install and restore renv
        run: |
          install.packages("renv")
          renv::restore()
        shell: Rscript {0}

      # (Optional) 5.5 Check renv status (useful for debugging)
      - name: Check renv status
        run: |
          renv::status()
        shell: Rscript {0}

      # 6. Create writable directory for model output
      - name: Create data-cache folder
        run: mkdir -p data-cache

      # Add these steps immediately after creating the data-cache folder
      - name: Ensure data-cache permissions
        run: |
          chmod -R 777 data-cache
          ls -ld data-cache

      - name: Debug data-cache permissions
        run: ls -ld data-cache && touch data-cache/test_file

      # 7. Install the Inseasonfor package from local source
      - name: Install Inseasonfor from local source
        run: |
          install.packages(".", repos = NULL, type = "source")
        shell: Rscript {0}

      # 8. Run your rendering function from the package
      - name: Render the report
        run: |
          Rscript -e 'Inseasonfor::render_page_fun(mod_result_file = "data-cache/forecast_results.csv")'

      # 9. Commit the updated CSVs (if changed)
      - name: Commit updated CSV files
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          echo "Configuring Git..."
          git config user.email "mark.sorel@dfw.wa.gov"
          git config user.name "marksorel8"
          git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/marksorel8/Inseasonfor.git
          echo "Staging updated CSV files..."
          git add inst/data-cache/*.csv || true
          echo "Checking for changes..."
          git diff --cached --quiet || git commit -m "Update CSV files"
          echo "Pushing changes..."
          git push origin main

      # 10. Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: inst/InseasonForecast
